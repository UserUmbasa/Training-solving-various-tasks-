#pragma once

Задача:
У вас есть функция, которая вычисляет N-е число Фибоначчи с использованием рекурсии. Однако данная реализация неэффективна из-за
 множественных повторных вычислений одних и тех же значений. Вам необходимо провести оптимизацию этой функции, чтобы
  уменьшить количество повторных вычислений и улучшить её производительность.

Исходный код функции:
//экспонента
int fibonacci(int n) {
    if (n <= 1) {
        return n;
    }
    return fibonacci(n - 1) + fibonacci(n - 2);
}
//Требуется:
//1. Провести оптимизацию функции `fibonacci` для уменьшения повторных вычислений.
//2. Проверить работоспособность новой оптимизированной функции на больших значениях N.

//Решение O(n)
int fibonacci(const int n) {
    int a = 0, b = 1, c, i;
    if (n == 0)
        return a;
    for (i = 2; i <= n; i++)
    {
        c = a + b;
        a = b;
        b = c;
    }
    return b;
}


